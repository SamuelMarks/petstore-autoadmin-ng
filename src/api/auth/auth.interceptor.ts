/**
* This file is generated by a tool. Do not edit directly.
* Generated by openapi-angular-generator.
*/
import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from "@angular/common/http";
import { inject, Injectable } from "@angular/core";
import { Observable } from "rxjs";
import { API_KEY_TOKEN, BEARER_TOKEN_TOKEN } from "./auth.tokens";

/** Intercepts HTTP requests to apply authentication credentials based on OpenAPI security schemes. */
@Injectable()
export class AuthInterceptor implements HttpInterceptor {
    private readonly apiKey: string | null = inject(API_KEY_TOKEN, { optional: true });
    private readonly bearerToken: (string | (() => string)) | null = inject(BEARER_TOKEN_TOKEN, { optional: true });

    intercept(req: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {
        let authReq = req;
        if (this.apiKey) { authReq = req.clone({ setHeaders: { 'api_key': this.apiKey } }); } else if (this.bearerToken) { const token = typeof this.bearerToken === 'function' ? this.bearerToken() : this.bearerToken; if (token) { authReq = req.clone({ setHeaders: { 'Authorization': `Bearer ${token}` } }); } }
        return next.handle(authReq);
    }
}
